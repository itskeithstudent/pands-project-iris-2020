---This is a summary text file of a decision tree classification model ran against the Iris Data Set.---

In this analysis I will primarily be using the sklearn package as this is what I'll be using to fit the model and to also split the dataset into training and validating.
As a first step I will pick my column of interest which will be called y (also known as the response, as it's the response to my faetures), this is the Species column as I want to determine the species using the data from the other columns.
After having identified my y, I need to pick my X, X are my features (can also be called variables) for this model.From the exporatory data analysis I performed earlier, I know we have 3 different species: ['Iris-setosa' 'Iris-versicolor' 'Iris-virginica']
This brings me back to X, my features of interest which are:
['petal_width', 'petal_length', 'sepal_width', 'sepal_length']

After defining these I define my iris_model object which uses sklearn.tree.DecisionTreeRegressor.
With the DecisionTreeRegressor I supply the arguments random_state=0 - this ensures that we get a consistent value back, not using random_state results in getting different results everytime.
The other argument that get's supplied is max_leaf_nodes=7, which sets the max number of splits in the tree we have (I played around with this in my jupyter notebook file:'Jupyter Analysis\iris_prelim_analysis.ipynb').

I then split the iris dataset into training and validating for the X and y, this ensures that we aren't overfitting the data.
The model get's fitted using the training data for X and y. Using the command iris_model.fit() with the training data for X and y supplied as arguments.
Then using the fitted model, we predict the flower species by supplying our validated X data, this will let us know whether the model we've built so far is accurate or not.
Our predicted values are:
['Iris-virginica', 'Iris-versicolor', 'Iris-setosa', 'Iris-virginica', 'Iris-setosa', 'Iris-virginica', 'Iris-setosa', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-virginica', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-setosa', 'Iris-versicolor', 'Iris-versicolor', 'Iris-setosa', 'Iris-setosa', 'Iris-virginica', 'Iris-versicolor', 'Iris-setosa', 'Iris-setosa', 'Iris-virginica', 'Iris-setosa', 'Iris-setosa', 'Iris-versicolor', 'Iris-versicolor', 'Iris-setosa', 'Iris-virginica', 'Iris-versicolor', 'Iris-setosa', 'Iris-virginica', 'Iris-virginica', 'Iris-versicolor', 'Iris-setosa', 'Iris-virginica']

Our actual values that we're trying to predict are:
['Iris-virginica', 'Iris-versicolor', 'Iris-setosa', 'Iris-virginica', 'Iris-setosa', 'Iris-virginica', 'Iris-setosa', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-virginica', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-versicolor', 'Iris-setosa', 'Iris-versicolor', 'Iris-versicolor', 'Iris-setosa', 'Iris-setosa', 'Iris-virginica', 'Iris-versicolor', 'Iris-setosa', 'Iris-setosa', 'Iris-virginica', 'Iris-setosa', 'Iris-setosa', 'Iris-versicolor', 'Iris-versicolor', 'Iris-setosa', 'Iris-virginica', 'Iris-versicolor', 'Iris-setosa', 'Iris-virginica', 'Iris-virginica', 'Iris-versicolor', 'Iris-setosa', 'Iris-versicolor']

Finally we get the score for or model, all this is really doing is checking with our validation data to see whether we can guess correctly we do this by supplying arguments for the validated X data and the values we predict for these, y.
Our returned model score is: 0.9736842105263158
Or another way of putting it, our model can correctly predict the species for 97.37% of our feature validation data.

The model score looks pretty good
What this tells us is that across the validation data we are off for one flower, which is a pretty good guess for our purposes as it was wrong only in one case.
This is a spoiler for Decision Tree image (which you can find in: 'DecisionTreeClassifierOptimalNodes.png'), the model only makes use of two of the four provided features to get this score: Petal_Length and Petal_Width.

As an extra step, I decided to check what kind of accuracy we get if we make a worse model but this time ommiting the features Petal_width and Petal_length.The final score we end up with for this model which only uses sepal_width and sepal_length is: 0.631578947368421
This gives us a difference in model score/accuracy of: 0.3421052631578948
Which pretty definitively shows how much better petal_length and petal_width are at determining Iris flower species.